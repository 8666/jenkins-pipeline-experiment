pipeline {
    agent {
        node {
            label 'linux'
        }
    }
    environment {
        FOO = "1.0.${BUILD_NUMBER}"
        BAR = "xyz"
    }    
    options { 
        disableConcurrentBuilds() 
    }
    stages {
        stage('Fake Build') {
        when { not { anyOf { branch 'develop'; branch 'main' }}}
            steps {
                echo 'Something else, like random'
            }
        }
        stage('Fake Main Deploy') {
            when { branch 'main' }
            steps {
                echo 'Deploying'
                echo "${BRANCH_NAME}"
                script {
                    FOO = "test2"
                    env.BAR = "bar2"
                }
            }
        }
        stage('Fake Develop Deploy') {
            when { branch 'develop' }
            steps {
                echo 'Deploying'
                echo "${BRANCH_NAME}"
                script {
                    FOO = "dev"
                    env.BAR = "dev"
                }
            }
        }
        stage('Final') {
            steps {
                echo "${FOO}"
                echo "${env.BAR}"
            
            }
        }
        stage('Env Vars') {
        when {
           expression {
           echo "BRANCH_NAME ${BRANCH_NAME}"
           return ("${BRANCH_NAME}"=="main")
           }
           }
         
            steps {
              // bat('set')
            sh "printenv | sort"
            }
        }
        
        
        stage('Main branch only') {
            when {
            branch 'main' 
            }
            stages {
                stage('Main 1') {
                    steps {
                        echo 'Building'
                    }
                }
                stage('Main 2') {
                    steps {
                        echo 'Archiving Aritfacts'
                       /// archiveArtifacts artifacts: '/*.zip', fingerprint: true
                    }
                }
                stage('Main 3') {
                    steps {
                        echo 'Deploying'
                      ///  timeout(time:3, unit:'DAYS') {
                      ///     input message: "Approve build?"
                      ///  }
                    }
                }
            }

        }
    }
}
